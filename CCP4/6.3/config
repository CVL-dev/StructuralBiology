#!/bin/sh
#
# CVL build system to configure source parameters.
#
#
# Module file description.
#
ModuleFileDescription="Application"

#
# Package release number.
#
PACKAGE_RELEASE="0.3"

#
# For source package, set it "ON", for binary package, set it "OFF".
#
SOURCE_BUILD_FLAG="ON"

#
# Source configure file.
#
CONFIGURE="install.log"

#
# Build configuration set up.
#
function ConfigurationCommand() 
{
    SOURCE=$1
    INSTALL=$2

    cp -r ${SOURCE}/* ${INSTALL}
}

#
# Make command
#
function MakeCommand()
{
    echo
}

#
# Make install command
#
function InstallCommand()
{
    echo
}

#
# Source patch command.
#
function PatchCommand()
{
    SourceDirectory=$1
    BuildSourceDirectory=$2
    InstallDirectory=$3

    echo
}

#
# Module file environment setting, multipe lines should be delimited by ";".
# Note: Certian characters such as " and $ need be escapted by "\"
#
EnvironmentModuleList="
prepend-path LD_LIBRARY_PATH /usr/local/\$name/\$ver/ccp4-6.3.0/lib;
prepend-path LD_LIBRARY_PATH /usr/local/\$name/\$ver/ccp4mg-2.6.2/lib;
prepend-path LD_LIBRARY_PATH /usr/local/\$name/\$ver/coot-0.6.2/lib;
prepend-path MANPATH /usr/local/\$name/\$ver/ccp4-6.3.0/share/man;
prepend-path MANPATH /usr/local/\$name/\$ver/coot-0.6.2/share/man;
prepend-path PATH /usr/local/\$name/\$ver/ccp4-6.3.0/bin;
prepend-path PATH /usr/local/\$name/\$ver/ccp4mg-2.6.2/bin;
prepend-path PATH /usr/local/\$name/\$ver/coot-0.6.2/bin;
prepend-path PATH /usr/local/\$name/\$ver/arp_warp-7.3/bin/bin-x86_64-Linux;
setenv CCP4 /usr/local/\$name/\$ver/ccp4-6.3.0;
setenv CCP4_BIN /usr/local/\$name/\$ver/ccp4-6.3.0/bin;
setenv CCP4_BROWSER firefox;
setenv CCP4_CRANK 1;
setenv CCP4_HELPDIR /usr/local/\$name/\$ver/ccp4-6.3.0/help;
setenv CCP4_TOP /usr/local/\$name/\$ver/ccp4-6.3.0;
setenv CCP4_LIB /usr/local/\$name/\$ver/ccp4-6.3.0/lib;
setenv CCP4_MASTER /usr/local/\$name/\$ver;
setenv CCP4_MASTER_VERSION /usr/local/\$name/\$ver/ccp4-6.3.0;
setenv CCP4_OPEN UNKNOWN;
setenv CCP4_SCR /tmp/cvldemo;
setenv CCP4_VERSION \$ver"

#
# Install configuration files to package in format of "<Source>:<Destination>",
# multiple lines must be delimeted by ";". Source files must be available in
# current source directory.
#
#PackageInstallFileList=

#
# Install configuration directories to package in format of 
# "<Source>:<Destination>", multiple lines must be delimeted by ";". 
# Source files must be available in current source directory.
#
#PackageInstallDirectoryList=

#
# Set menu layout in format <project_type>:<application_menu>. If this is not 
# set, the following MeuDirectory and MenuDesktop will be ignored.
#
# The <project_type> is curently only defined for "cvl" project.
# Supporting for "cvl" application_menu includes:
# - toolbox
# - system
# - structural-biology
# - neuroimaging
# - energy-materials
#
MenuLayout="cvl:structural-biology"

#
# Set directory menu in format <comment>:<icon>. If the icon file is from
# package, using "~" for package installation path.
#
MenuDirectory="ccp4:~/ccp4-6.3.0/ccp4i.png"

#
# Set desktop menu in format <executable_file>:<comment>:<icon>:<add_terminal>,
# multiple lines should be delimited by ";". The value of <add_terminal> flag
# is "true" or "false"
#
# If the icon file is located in package, using "~" for package installation path.
#
# The binary_path is a relative path including executable filename but without 
# the installation prefix. For example, if /usr/local/turbovnc/1.1/bin/vncviewer
# is the FQPN, the executable_file should be set to bin/vncviewer.
#
MenuDesktop="ccp4-6.3.0/ccp4i.sh:ccp4:~/ccp4-6.3.0/ccp4i.png:true;ccp4mg-2.6.2/bin/ccp4mg:ccp4mg:~/ccp4mg-2.6.2/ccp4mg.png:true;document:ccp4 document:help:false;coot-0.6.2/bin/coot:ccp4 coot:~/coot-0.6.2/coot.png:true;arp_warp_7.3/bin/bin-x86_64-Linux/arp_warp:ccp4 arp_warp:~/arp_warp_7.3/share/ARP_logo_small.gif:true"

#
# Set library dependencies in following format (version is optional):
# <module1/version>:<module2/version>...:<moduleN/version>
#
#LibraryDependency=

#
# Local build flag, set it to ON for building or OFF otherwise.
#
REQUEST_BUILD="ON"

#
# Local package flag, set it to ON for packaging or OFF otherwise.
#
REQUEST_PACKAGE="ON"

#
# Build in source directory, "ON" or "OFF".
#
BUILD_IN_SOURCE="OFF"

#
# Install module file flag, "ON" or "OFF".
#
INSTALL_MODULE_FILE="ON"

#
# Binary installation directory "<Source>:<Destination>". This field is only 
# for applications which have special requirement of source code in different 
# structure or different binary destination directory.
#
#InstallDirectory=

#
# Package auto dependency check flag, "true" for enabling the check, "false"
# for not.
#
AutoDependencyCheck="true"

#
# Pre installation script for RPM package only. The bash script file should be 
# available in the source localtion. Edit following variable for file name 
# (no path) and only one script can be defined.
#
# PreInstallScript=

#
# Post installation script for RPM package only. The bash script file should be
# available in the source localtion. Edit following variable for file name 
# (no path) and only one script can be defined.
#
PostInstallScript="post"

case "$1" in
    -a|--description)
        echo -n ${ModuleFileDescription}
        ;;
    -b|--build)
        echo -n ${REQUEST_BUILD}
        ;;
    -c|--config)
        SOURCE_DIR="$2"
        INSTALL_DIR="$3"
        ConfigurationCommand ${SOURCE_DIR} ${INSTALL_DIR}
        ;;
    -d|--directory-installation-list)
        echo -n ${PackageInstallDirectoryList}
        ;;
    -e|--enviornment-module-list)
        echo -n ${EnvironmentModuleList}
        ;;
    -f|--file-installation-list)
        echo -n ${PackageInstallFileList}
        ;;
    -g|--group-module-file-installation)
        echo -n ${INSTALL_MODULE_FILE}
        ;;
    -h|--install-directory)
        echo -n ${InstallDirectory}
        ;;
    -i|--install-command)
        InstallCommand
        ;;
    -j|--patch-command)
        SOURCE_DIR="$2"
        BUILD_SOURCE_DIR="$3"
        INSTALL_DIR="$4"
        PatchCommand ${SOURCE_DIR} ${BUILD_SOURCE_DIR} ${INSTALL_DIR}
        ;;
    -k|--make-command)
        MakeCommand
        ;;
    -l|--menu-layout)
        echo -n ${MenuLayout}
        ;;
    -m|--module-file)
        ;;
    -n|--menu-directory)
        echo -n ${MenuDirectory}
        ;;
    -o|--menu-desktop)
        echo -n ${MenuDesktop}
        ;;
    -p|--package)
        echo -n ${REQUEST_PACKAGE}
        ;;
    -q|--library-dependency)
        echo -n ${LibraryDependency}
        ;;
    -r|--release)
        echo -n ${PACKAGE_RELEASE}
        ;;
    -s|--use-source-directory)
        echo -n ${BUILD_IN_SOURCE}
        ;;
    -t|--type)
        echo -n ${CONFIGURE}
        ;;
    -u|--auto-dependency-check)
        echo -n ${AutoDependencyCheck}
        ;;
    -v|--pre-install-script-file)
        echo -n ${PreInstallScript}
        ;;
    -y|--post-install-script-file)
        echo -n ${PostInstallScript}
        ;;
    -z|--source-build-flag)
        echo -n ${SOURCE_BUILD_FLAG}
        ;;
esac
